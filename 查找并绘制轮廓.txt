#include<opencv2/opencv.hpp>
#include<opencv2/highgui/highgui.hpp>
#include<opencv2/imgproc/imgproc.hpp>
#include<iostream>
using namespace std;
using namespace cv;

#define WINDOW_NAME1 "yuantu"
#define WINDOW_NAME2 "lunkuotu"
Mat g_srcimage;
Mat g_grayimage;
int g_nThresh =80;
int g_nThresh_max=255;
RNG g_rng(12345);
Mat g_cannyMat_output ;
vector <vector<Point>> g_vContours;
vector<Vec4i> g_vHierarchy;

 //static void ShowHelpText();
void on_ThreshChange(int ,void*);

int main ()
{
	system("color 1F");
	//ShowHelpText();
	
	g_srcimage =imread ("1.jpg");
	cvtColor (g_srcimage,g_grayimage,CV_RGB2GRAY);
	blur(g_grayimage,g_grayimage,Size(3,3));
	
	namedWindow(WINDOW_NAME1,WINDOW_AUTOSIZE);
	imshow(WINDOW_NAME1,g_srcimage);
	
	createTrackbar("canny",WINDOW_NAME1,&g_nThresh,g_nThresh_max,on_ThreshChange);
	on_ThreshChange(0,0);
	waitKey (0);
	return 0;
	
	
}

void on_ThreshChange(int ,void*)
{
	Canny(g_grayimage,g_cannyMat_output,g_nThresh,g_nThresh*2,3);
	
	findContours(g_cannyMat_output,g_vContours,g_vHierarchy,RETR_TREE,CHAIN_APPROX_SIMPLE,Point(0,0));
	
	Mat drawing =Mat ::zeros (g_cannyMat_output.size(),CV_8UC3);
	
	for (int i=0; i<g_vContours.size();i++)
	{
		Scalar color =Scalar(g_rng.uniform(0,255),g_rng.uniform(0,255),g_rng.uniform(0,255));
		
		drawContours(drawing,g_vContours,i,color,2,8,g_vHierarchy,0,Point());
	}
	imshow(WINDOW_NAME2,drawing);
}