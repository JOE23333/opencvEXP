#include<opencv2/opencv.hpp>
#include<opencv2/imgproc/imgproc.hpp>
#include<opencv2/highgui/highgui.hpp>
#include<iostream>
using namespace cv;
using namespace std;

Mat g_srcimage, g_dstimage, g_grayimage, g_maskimage;
int g_nFillMode = 1;
int g_nLowDifference = 20, g_nUpDifference = 20;
int g_nConnectivity = 4;
int g_bIsColor = true;
bool g_bUseMask = false;
int g_nNewMaskVal = 255;
static  void onMouse(int event, int x, int y, int, void*)
{
	if (event != CV_EVENT_LBUTTONDOWN)
		return;
	Point seed = Point(x, y);
	int LowDifference = g_nFillMode == 0 ? 0 : g_nLowDifference;
	int UpDifference = g_nFillMode == 0 ? 0 : g_nUpDifference;

	int flags = g_nConnectivity + (g_nNewMaskVal << 8) + (g_nFillMode == 1 ? FLOODFILL_FIXED_RANGE : 0);

	int b = (unsigned)theRNG() & 255;
	int g = (unsigned)theRNG() & 255;
	int r = (unsigned)theRNG() & 255;
	Rect ccomp;

	Scalar newVal = g_bIsColor ? Scalar(b, g, r) : Scalar(r*0.229 + g*0.587 + b*0.114);
	
		Mat dstimage = g_bIsColor ? g_dstimage : g_grayimage;
	int area;

	if (g_bUseMask)
	{
		threshold(g_maskimage, g_maskimage, 1, 128, CV_THRESH_BINARY);
		area = floodFill(dstimage, g_maskimage, seed, newVal, &ccomp, Scalar(LowDifference, LowDifference, LowDifference), Scalar(UpDifference, UpDifference, UpDifference), flags);
		imshow("mask", g_maskimage);
	}
	else
	{
		area = floodFill(dstimage, seed, newVal, &ccomp, Scalar(LowDifference, LowDifference, LowDifference), Scalar(UpDifference, UpDifference, UpDifference), flags);

	}

	imshow("xiaoguotu", dstimage);
	cout << area << "gexiaosugeshubiechonghui\n";
}






int main(int argc, char** argv){
	g_srcimage = imread("1.jpg", 1);
	if (!g_srcimage.data){ printf("wrong photo\n"); return false; }
	g_srcimage.copyTo(g_dstimage);
	cvtColor(g_srcimage, g_grayimage, COLOR_BGR2GRAY);
	g_maskimage.create(g_srcimage.rows + 2, g_srcimage.cols + 2, CV_8UC1);

	namedWindow("xiaoguotu", CV_WINDOW_AUTOSIZE);

	createTrackbar("fuchamax", "xiaoguotu", &g_nLowDifference, 255, 0);
	createTrackbar("zhengchamax", "xiaoguotu", &g_nUpDifference, 255, 0);


	setMouseCallback("xiaoguotu", onMouse, 0);

	while (1)
	{
		imshow("xiaoguotu", g_bIsColor ? g_srcimage : g_grayimage);

		int c = waitKey(0);

		if ((c & 255) == 27){
			cout << "exit\n";
			break;

		}
		switch ((char)c)
		{
		case'1':
			if (g_bIsColor){
				cout << "jianpan1bei anxia qiehuan moshi caise qiehuan huise \n";
				cvtColor(g_srcimage, g_grayimage, COLOR_BGR2GRAY);
				g_maskimage = Scalar::all(0);
				g_bIsColor = false;
			}
			else
			{
				cout << "jianpan1bei anxia qiehuan moshi caise qiehuan huise \n";
				g_srcimage.copyTo(g_dstimage);
				g_maskimage = Scalar::all(0);
				g_bIsColor = true;
			}
			break;

		case'2':
			if (g_bUseMask)
			{
				destroyWindow("mask");
				g_bUseMask = false;
			}
			else
			{
				namedWindow("mask", 0);
				g_maskimage = Scalar::all(0);
				imshow("mask", g_maskimage);
				g_bUseMask = true;
			}
			break;

		case'3':
			cout << "3 huifu yuantu";
			g_srcimage.copyTo(g_dstimage);
			cvtColor(g_dstimage, g_grayimage, COLOR_BGR2GRAY);
			g_maskimage = Scalar::all(0);
			break;

		case'4':
			cout << "4kongfanwei manshui tianchong ";
			g_nFillMode = 0;
			break;

		case'5':
			cout << "5jianbian gudingfanwei manshui tianchong ";
			g_nFillMode = 1;
			break;

		case'6':
			cout << "6jianbian fudong fanwei manshui tianchong ";
			g_nFillMode = 2;
			break;

		case'7':
			cout << "7caozuo biaozhifu di8wei siwei lianjie moshi ";
			g_nConnectivity = 4;
			break;

		case'8':
			cout << "8di8wei bawei lianjie moshi ";
			g_nConnectivity = 8;
			break;
		}






	}


	return 0;

}